import { useTheme } from "@/src/contexts/theme";
import { TurndownObject } from "@/src/types";
import { IconProps } from "@/src/types/common/style.types";
import React, { useRef } from "react";
import Svg, { Path } from "react-native-svg";
import { usePointerEvent } from "../hooks/usePointerEvent.hook";
import { removeUndefined } from "../lib/object";
import { StyledIcon } from "./shared/icon.styled";
export const LemonIcon: React.FC<
  IconProps & {
    type: "solid" | "regular" | "light" | "thin" | "duotone";
  }
> = ({
  type,
  size,
  color: colorName,
  active,
  style,
  opacity,
  haptic,
  ...more
}) => {
  const { colors } = useTheme();

  const domRef: TurndownObject = useRef(null);

  const { onPress, onMove, onUp, onDown, groupId } = more;
  const pointerEvents = {
    onPress,
    onMove,
    onUp,
    onDown,
    groupId,
  };

  usePointerEvent({ element: domRef, active: active, ...pointerEvents });

  const internalProperties = removeUndefined({
    style: style || {},
    pointerEvents,
    haptic,
    active,
    size,
    color: colors[colorName || "text"],
  });

  return (
    <StyledIcon ref={domRef} {...internalProperties}>
      {(() => {
        switch (type) {
          case "solid":
            return (
              <Svg viewBox="0 0 448 512" fill={colors[colorName || "text"]}>
                <Path d="M448 96c0-35.3-28.7-64-64-64-6.6 0-13 1-19 2.9-22.5 7-48.1 14.9-71 9-75.2-19.1-156.4 11-213.7 68.3S-7.2 250.8 11.9 326c5.8 22.9-2 48.4-9 71C1 403 0 409.4 0 416c0 35.3 28.7 64 64 64 6.6 0 13-1 19.1-2.9 22.5-7 48.1-14.9 71-9 75.2 19.1 156.4-11 213.7-68.3s87.5-138.5 68.3-213.7c-5.8-22.9 2-48.4 9-71 1.9-6 2.9-12.4 2.9-19.1m-235.5 31.4c-54.6 16-101.1 62.5-117.1 117.1-2.5 8.5-11.4 13.3-19.9 10.9S62.2 244 64.6 235.5c19.1-65.1 73.7-119.8 138.9-138.9 8.5-2.5 17.4 2.4 19.9 10.9s-2.4 17.4-10.9 19.9" />
              </Svg>
            );

          case "regular":
            return (
              <Svg viewBox="0 0 448 512" fill={colors[colorName || "text"]}>
                <Path d="M368 80c-3.2 0-6.2.4-8.9 1.3-19.1 5.5-46.1 10.6-74.3 3.3-57.4-14.9-124.6 7.4-174.7 57.5S37.7 259.4 52.6 316.8c7.3 28.2 2.2 55.2-3.3 74.3-.8 2.8-1.3 5.8-1.3 8.9 0 17.7 14.3 32 32 32 3.2 0 6.2-.4 8.9-1.3 19.1-5.5 46.1-10.7 74.3-3.3 57.4 14.9 124.6-7.4 174.7-57.5s72.4-117.3 57.5-174.7c-7.3-28.2-2.2-55.2 3.3-74.3.8-2.8 1.3-5.8 1.3-8.9 0-17.7-14.3-32-32-32m0-48c44.2 0 80 35.8 80 80 0 7.7-1.1 15.2-3.1 22.3-4.6 15.8-7.1 32.9-3 48.9 20.1 77.6-10.9 161.5-70 220.7s-143.1 90.2-220.7 70c-16-4.1-33-1.6-48.9 3-7.1 2-14.6 3.1-22.3 3.1-44.2 0-80-35.8-80-80 0-7.7 1.1-15.2 3.1-22.3 4.6-15.8 7.1-32.9 3-48.9C-14 251.3 17 167.3 76.2 108.2S219.3 18 296.8 38.1c16 4.1 33 1.6 48.9-3 7.1-2 14.6-3.1 22.3-3.1M246.7 167c-52 15.2-96.5 59.7-111.7 111.7-3.7 12.7-17.1 20-29.8 16.3s-20-17.1-16.3-29.8c19.8-67.7 76.6-124.5 144.3-144.3 12.7-3.7 26.1 3.6 29.8 16.3s-3.6 26.1-16.3 29.8" />
              </Svg>
            );

          case "light":
            return (
              <Svg viewBox="0 0 448 512" fill={colors[colorName || "text"]}>
                <Path d="M368 64c-5.8 0-11.2 1-16.2 2.8-18.9 6.8-44.1 12.9-70.1 7.1-60.7-13.5-128.7 11-178.8 61S28.4 253 41.9 313.7c5.8 26-.3 51.2-7.1 70.1-1.8 5-2.8 10.4-2.8 16.2 0 26.5 21.5 48 48 48 5.8 0 11.2-1 16.2-2.8 18.9-6.8 44.1-12.9 70.1-7.1 60.7 13.5 128.7-11 178.8-61s74.5-118.1 61-178.8c-5.8-26 .3-51.2 7.1-70.1 1.8-5 2.8-10.5 2.8-16.2 0-26.5-21.5-48-48-48m0-32c44.2 0 80 35.8 80 80 0 9.5-1.7 18.6-4.7 27.1-6 16.7-9.8 35-5.9 52.4 16.4 73.7-13.7 152.4-69.6 208.3s-134.7 86-208.3 69.6c-17.3-3.9-35.7-.1-52.4 5.9-8.4 3-17.6 4.7-27.1 4.7-44.2 0-80-35.8-80-80 0-9.5 1.7-18.6 4.7-27.1 6-16.7 9.8-35 5.9-52.4-16.4-73.6 13.7-152.3 69.6-208.3s134.7-86 208.3-69.6c17.3 3.9 35.7.1 52.4-5.9 8.4-3 17.6-4.7 27.1-4.7M246.7 134.5l-18.4 8.5c-51.8 23.9-93.4 65.5-117.3 117.3l-8.5 18.4c-3.7 8-13.2 11.5-21.2 7.8s-11.5-13.2-7.8-21.2l8.5-18.4c27.1-58.7 74.3-105.9 133-133l18.4-8.5c8-3.7 17.5-.2 21.2 7.8s.2 17.5-7.8 21.2z" />
              </Svg>
            );

          case "thin":
            return (
              <Svg viewBox="0 0 448 512" fill={colors[colorName || "text"]}>
                <Path d="M368 48c-7.6 0-14.9 1.3-21.6 3.7-17.8 6.4-39.6 11.3-61.3 6.5-67.2-15-140.6 12.3-193.5 65.3S11.4 249.9 26.3 317c4.8 21.7-.1 43.4-6.5 61.3-2.4 6.7-3.7 14-3.7 21.6 0 35.3 28.7 64 64 64 7.6 0 14.9-1.3 21.6-3.7 17.8-6.4 39.6-11.3 61.3-6.5 67.2 15 140.6-12.3 193.5-65.3s80.2-126.4 65.3-193.5c-4.8-21.7.1-43.4 6.5-61.3 2.4-6.7 3.7-14 3.7-21.6 0-35.3-28.7-64-64-64m0-16c44.2 0 80 35.8 80 80 0 9.5-1.7 18.6-4.7 27.1-6 16.7-9.8 35-5.9 52.4 16.4 73.7-13.7 152.4-69.6 208.3s-134.7 86-208.3 69.6c-17.3-3.9-35.7-.1-52.4 5.9-8.4 3-17.6 4.7-27.1 4.7-44.2 0-80-35.8-80-80 0-9.5 1.7-18.6 4.7-27.1 6-16.7 9.8-35 5.9-52.4-16.4-73.6 13.7-152.3 69.6-208.3s134.7-86 208.3-69.6c17.3 3.9 35.7.1 52.4-5.9 8.4-3 17.6-4.7 27.1-4.7m-148.9 87.4-16.9 7.1c-48.7 20.3-87.4 59-107.7 107.7l-7.1 16.9c-1.7 4.1-6.4 6-10.5 4.3s-6-6.4-4.3-10.5l7.1-16.9c21.9-52.6 63.7-94.4 116.3-116.3l16.9-7.1c4.1-1.7 8.8.2 10.5 4.3s-.2 8.8-4.3 10.5" />
              </Svg>
            );

          case "duotone":
            return (
              <Svg viewBox="0 0 448 512" fill={colors[colorName || "text"]}>
                <Path
                  fill={colors[colorName || "text"]}
                  opacity={opacity || 0.5}
                  d="M448 96c0-35.3-28.7-64-64-64-6.6 0-13 1-19 2.9-22.5 7-48.1 14.9-71 9-75.2-19.1-156.4 11-213.7 68.3S-7.2 250.8 11.9 326c5.8 22.9-2 48.4-9 71C1 403 0 409.4 0 416c0 35.3 28.7 64 64 64 6.6 0 13-1 19.1-2.9 22.5-7 48.1-14.9 71-9 75.2 19.1 156.4-11 213.7-68.3s87.5-138.5 68.3-213.7c-5.8-22.9 2-48.4 9-71 1.9-6 2.9-12.4 2.9-19.1m-235.5 31.4c-54.6 16-101.1 62.5-117.1 117.1-2.5 8.5-11.4 13.3-19.9 10.9S62.2 244 64.6 235.5c19.1-65.1 73.7-119.8 138.9-138.9 8.5-2.5 17.4 2.4 19.9 10.9s-2.4 17.4-10.9 19.9"
                />
                <Path d="M223.4 107.5c2.5 8.5-2.4 17.4-10.9 19.9-54.6 16-101.1 62.5-117.1 117.1-2.5 8.5-11.4 13.3-19.9 10.9S62.2 244 64.6 235.5c19.1-65.1 73.7-119.8 138.9-138.9 8.5-2.5 17.4 2.4 19.9 10.9" />
              </Svg>
            );

          default:
            return null;
        }
      })()}
    </StyledIcon>
  );
};
